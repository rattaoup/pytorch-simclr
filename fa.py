import matplotlib.pyplot as plt
import numpy as np


def se(array, axis=0):
    return array.std(axis=axis) / np.sqrt(array.shape[axis])


if __name__ == '__main__':
    dataset = 'cifar100.gp'

    # baseline = [(86.61, 0.4277), (93.99, 0.1732), (94.28, 0.1658), (94.24, 0.1633), (94.41, 0.1618), (94.43, 0.1611),
    #  (94.43, 0.1604), (94.47, 0.1599), (94.54, 0.1591), (94.62, 0.1586)]

    # inv = [(86.94, 0.4224), (94.45, 0.1678), (94.58, 0.1602), (94.62, 0.1569), (94.65, 0.1553), (94.76, 0.1546),
    #  (94.8, 0.1542), (94.85, 0.1537), (94.91, 0.1531), (94.87, 0.1533)]
    # invs = [[(93.4, 0.19084855914115906), (94.52, 0.16708481311798096), (94.71, 0.16115325689315796),
    #          (94.73, 0.15988996624946594), (94.69, 0.15886880457401276), (94.76, 0.15774832665920258),
    #          (94.79, 0.15716587007045746), (94.75, 0.15680773556232452), (94.77, 0.15641529858112335),
    #          (94.84, 0.1561741977930069)],
    #          [(93.58, 0.18735511600971222), (94.48, 0.16065604984760284), (94.66, 0.15743771195411682),
    #           (94.75, 0.15562307834625244), (94.74, 0.1553688794374466), (94.7, 0.1548636257648468),
    #           (94.72, 0.15395040810108185), (94.75, 0.1541283130645752), (94.81, 0.1539543867111206),
    #           (94.76, 0.15337489545345306)],
    #          [(93.55, 0.18709571659564972), (94.52, 0.16025693714618683), (94.84, 0.15642397105693817),
    #           (94.77, 0.1557120978832245), (94.79, 0.1545531451702118), (94.83, 0.15411685407161713),
    #           (94.78, 0.1541195511817932), (94.8, 0.15403395891189575), (94.8, 0.15365758538246155),
    #           (94.89, 0.15360258519649506)]
    #         ]
    if dataset == 'cifar100.gp':
        full_transform = [[(71.96, 0.9850741028785706), (74.31, 0.9133493304252625), (74.38, 0.9005898237228394),
                           (74.69, 0.8945195078849792), (74.91, 0.8918313384056091), (74.88, 0.8888886570930481),
                           (74.95, 0.887345016002655), (74.93, 0.8863173723220825), (74.97, 0.8854685425758362),
                           (75.06, 0.8846126794815063)],
                          [(71.69, 1.0120564699172974), (73.93, 0.9333513379096985), (74.39, 0.9169861078262329),
                           (74.4, 0.9120872020721436), (74.67, 0.9082799553871155), (74.63, 0.9064268469810486),
                           (74.73, 0.904803991317749), (74.75, 0.9043594598770142), (74.7, 0.9039312601089478),
                           (74.73, 0.902851939201355)],
                          [(72.33, 0.987155556678772), (74.41, 0.9128754138946533), (74.96, 0.9000036120414734),
                           (75.04, 0.8954520225524902), (75.35, 0.8931947350502014), (75.32, 0.8908585906028748),
                           (75.29, 0.8898369073867798), (75.29, 0.8889204263687134), (75.16, 0.8880875110626221),
                           (75.04, 0.8882666826248169)]]

        color_transform = [[(71.9, 0.9880205988883972), (72.14, 0.9824464917182922), (72.21, 0.9807185530662537),
                            (72.25, 0.9798857569694519), (72.26, 0.9797494411468506), (72.38, 0.9796364307403564),
                            (72.26, 0.9793760776519775), (72.25, 0.9791726469993591), (72.31, 0.9789991974830627),
                            (72.32, 0.9788422584533691)],
                           [(71.51, 0.9931216835975647), (72.07, 0.9857090711593628), (72.03, 0.9851745963096619),
                            (72.03, 0.9849377870559692), (72.01, 0.9848896265029907), (72.1, 0.9846844673156738),
                            (72.01, 0.9844856262207031), (72.04, 0.9843379855155945), (72.06, 0.9840037822723389),
                            (72.02, 0.9838252067565918)],
                           [(71.57, 0.9918927550315857), (72.06, 0.98319411277771), (72.06, 0.9817425608634949),
                            (72.17, 0.9808887839317322), (72.2, 0.9808475375175476), (72.15, 0.9803982377052307),
                            (72.1, 0.9803654551506042), (72.2, 0.9799935817718506), (72.17, 0.9798819422721863),
                            (72.19, 0.9795755743980408)]]
        base_mean, base_se = 72.2 * np.ones(10), 0.06 * np.ones(10)
    elif dataset == 'cifar100.aam':
        full_transform = [[(70.52, 1.032601237297058), (73.06, 0.9578695297241211), (73.59, 0.9404911398887634),
                           (73.81, 0.9334453344345093),
                           (73.97, 0.9299776554107666), (73.92, 0.9287075996398926), (74.04, 0.9264578819274902),
                           (74.07, 0.9250524640083313),
                           (74.1, 0.9245312213897705), (73.96, 0.9240210056304932)],
                          [(71.95, 1.014845609664917), (73.76, 0.9356591701507568), (74.07, 0.9193270802497864),
                           (74.19, 0.9132465720176697),
                           (74.33, 0.909756064414978), (74.21, 0.9089100360870361), (74.31, 0.9073709845542908),
                           (74.36, 0.9059340953826904),
                           (74.25, 0.9050937294960022), (74.32, 0.9042967557907104)],
                          [(71.08, 1.032258152961731), (73.0, 0.9555743336677551), (73.47, 0.9388134479522705),
                           (73.68, 0.9341751933097839),
                           (73.77, 0.9299799799919128), (73.82, 0.9285500049591064), (73.84, 0.9262404441833496),
                           (73.86, 0.9258341789245605),
                           (73.8, 0.925108790397644), (74.01, 0.9250590801239014)]
                          ]
        color_transform = [[(71.05, 1.0384410619735718), (70.9, 1.0300472974777222), (70.97, 1.0292797088623047),
                            (71.02, 1.028406023979187), (70.96, 1.0281060934066772), (71.06, 1.0280945301055908),
                            (71.05, 1.0282987356185913), (71.0, 1.0283071994781494), (71.14, 1.028196096420288),
                            (71.17, 1.0280359983444214)],
                           [(70.61, 1.0351548194885254), (71.09, 1.0263025760650635), (71.13, 1.024275302886963),
                            (71.05, 1.0245084762573242), (71.12, 1.0245541334152222), (71.1, 1.0241864919662476),
                            (71.13, 1.0242527723312378), (71.12, 1.0242657661437988), (71.13, 1.0242444276809692),
                            (71.26, 1.0240122079849243)],
                           [(70.97, 1.0182478427886963), (71.27, 1.0103951692581177), (71.35, 1.009089708328247),
                            (71.35, 1.0087512731552124), (71.46, 1.0084649324417114), (71.53, 1.008238434791565),
                            (71.58, 1.007995367050171), (71.5, 1.0074563026428223), (71.47, 1.0074323415756226),
                            (71.45, 1.0076185464859009)]]
        base_mean, base_se = 71.3 * np.ones(10), 0.14 * np.ones(10)
    elif dataset == 'cifar10.gp':
        full_transform = [[(93.4, 0.19084855914115906), (94.52, 0.16708481311798096), (94.71, 0.16115325689315796),
                   (94.73, 0.15988996624946594), (94.69, 0.15886880457401276), (94.76, 0.15774832665920258),
                   (94.79, 0.15716587007045746), (94.75, 0.15680773556232452), (94.77, 0.15641529858112335),
                   (94.84, 0.1561741977930069)],
                   [(93.58, 0.18735511600971222), (94.48, 0.16065604984760284), (94.66, 0.15743771195411682),
                    (94.75, 0.15562307834625244), (94.74, 0.1553688794374466), (94.7, 0.1548636257648468),
                    (94.72, 0.15395040810108185), (94.75, 0.1541283130645752), (94.81, 0.1539543867111206),
                    (94.76, 0.15337489545345306)],
                   [(93.55, 0.18709571659564972), (94.52, 0.16025693714618683), (94.84, 0.15642397105693817),
                    (94.77, 0.1557120978832245), (94.79, 0.1545531451702118), (94.83, 0.15411685407161713),
                    (94.78, 0.1541195511817932), (94.8, 0.15403395891189575), (94.8, 0.15365758538246155),
                    (94.89, 0.15360258519649506)]
                  ]

        color_transform = [
            [(93.19, 0.20025599002838135), (93.26, 0.19859802722930908), (93.23, 0.19833870232105255),
             (93.23, 0.19788981974124908), (93.19, 0.19781774282455444), (93.21, 0.197641059756279), (93.22, 0.1974181830883026), (93.22, 0.1974828988313675),
             (93.25, 0.197435662150383), (93.23, 0.19735099375247955)],
            [(93.33, 0.19373652338981628), (93.18, 0.19230493903160095), (93.32, 0.19213923811912537),
             (93.32, 0.19210928678512573), (93.25, 0.19195422530174255), (93.3, 0.1918664276599884), (93.33, 0.1917451024055481), (93.28, 0.19176091253757477),
             (93.29, 0.19175386428833008), (93.28, 0.1917581856250763)],
            [(92.98, 0.20062246918678284), (93.02, 0.19866037368774414), (93.02, 0.19804294407367706),
             (93.08, 0.19808749854564667), (93.12, 0.19781452417373657), (93.11, 0.1978626847267151), (93.13, 0.19768063724040985), (93.11, 0.197684183716774),
             (93.12, 0.19778558611869812), (93.13, 0.19779592752456665)]
        ]

        base_mean, base_se = 93.35 * np.ones(10), 0.04 * np.ones(10)

    m = [int(x) for x in np.linspace(5, 100, 10)]
    full_acc = np.stack([np.array([x[0] for x in y]) for y in full_transform])
    color_acc = np.stack([np.array([x[0] for x in y]) for y in color_transform])

    plt.figure(figsize=(4.5, 3.5))
    # # col = '#2ba0c4'
    # col = '#377e82'
    # plt.plot(m, [x[0] for x in baseline], color=col, marker='x', markersize=7)
    # # plt.fill_between(epochs, base_mean + base_se, base_mean - base_se, alpha=0.15, color=col)

    inv_mean, inv_se = full_acc.mean(0), se(full_acc, 0)
    col2 = '#9d0208'
    plt.plot(m, inv_mean, color=col2, marker='x', markersize=7)
    plt.fill_between(m, inv_mean + inv_se, inv_mean - inv_se, alpha=0.15, color=col2)

    inv2_mean, inv2_se = color_acc.mean(0), se(color_acc, 0)
    col3 = '#6a040f'
    plt.plot(m, inv2_mean, color=col2, marker='*', markersize=7, markeredgewidth=0)
    plt.fill_between(m, inv2_mean + inv2_se, inv2_mean - inv2_se, alpha=0.15, color=col3)

    col4='#03071e'
    # base_mean, base_se = 93.34 * np.ones(len(m)), 0.04 * np.ones(len(m))

    plt.plot(m, base_mean, color=col3, marker='v', markersize=7, markeredgewidth=0.)
    plt.fill_between(m, base_mean + base_se, base_mean - base_se, alpha=0.15, color=col4)

    plt.xlabel('$M$')
    plt.ylabel('Test accuracy')
    plt.ylim([70.75, 75.25])
    plt.legend(['All transformations', 'Differentiable\ntransformations', 'No transformations'],
               loc='center right', fontsize=12, frameon=False)

    plt.show()
